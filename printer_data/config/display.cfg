#####################################################################
#   V0 Display
#####################################################################
[mcu display]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_2A0028000E43304146393720-if00
restart_method: command

[display]
lcd_type: sh1106
i2c_mcu: display
i2c_bus: i2c1a
# # Set the direction of the encoder wheel
# #   Standard: Right (clockwise) scrolls down or increases values. Left (counter-clockwise scrolls up or decreases values.
encoder_pins: ^display:PA3, ^display:PA4
# #   Reversed: Right (clockwise) scrolls up or decreases values. Left (counter-clockwise scrolls down or increases values.
# #encoder_pins: ^display:PA4, ^display:PA3
click_pin: ^!display:PA1
kill_pin: ^!display:PA5
x_offset: 2
# #   Use X offset to shift the display towards the right. Value can be 0 to 3
vcomh: 31
# #   Set the Vcomh value on SSD1306/SH1106 displays. This value is
# #   associated with a "smearing" effect on some OLED displays. The
# #   value may range from 0 to 63. Default is 0.
# #   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)

[neopixel displayStatus]
pin: display:PA0
chain_count: 1
color_order: GRB
initial_RED: 0.2
initial_GREEN: 0.05
initial_BLUE: 0

# [gcode_macro LCDRGB]
# gcode:
#     {% set r = params.R|default(0)|float %}
#     {% set g = params.G|default(0)|float %}
#     {% set b = params.B|default(0)|float %}

#     SET_LED LED=displayStatus RED={r} GREEN={g} BLUE={b} INDEX=1 TRANSMIT=0
#     SET_LED LED=displayStatus RED={r} GREEN={g} BLUE={b} INDEX=2 TRANSMIT=0
#     SET_LED LED=displayStatus RED={r} GREEN={g} BLUE={b} INDEX=3

# [gcode_macro INITIAL_RGB]
# gcode:
#     SET_LED LED=lcd RED=1 GREEN=0.45 BLUE=0.4 INDEX=1 TRANSMIT=0
#     SET_LED LED=lcd RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=2 TRANSMIT=0
#     SET_LED LED=lcd RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=3

# [delayed_gcode SETDISPLAYNEOPIXEL]
# initial_duration: 1
# gcode:
#     INITIAL_RGB